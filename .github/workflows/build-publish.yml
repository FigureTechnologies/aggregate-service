name: Build and Deploy Serverless

# Controls when the workflow will run
on:
  release:
    types:
      - created
  workflow_dispatch:

# A workflow run is made up of one or more jobs that can run sequentially or in parallel
jobs:
  java_build:
    name: Build and Publish jar
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v2
      - name: Get Version
        run: |
          # Strip git ref prefix from version
          VERSION=$(echo "${{ github.ref }}" | sed -e 's,.*/\(.*\),\1,')

          # Strip "v" prefix from tag name
          [[ "${{ github.ref }}" == "refs/tags/"* ]] && VERSION=$(echo $VERSION | sed -e 's/^v//')
          
          PRERELEASE=${{ github.event.release.prerelease }}
          echo PRERELEASE=$PRERELEASE
          if[ "$PRERELEASE" == "true" ]; then
             VERSION=$VERSION-SNAPSHOT
          fi

          echo "VERSION=$VERSION" >> $GITHUB_ENV
      - name: Set up JDK 11
        uses: actions/setup-java@v1
        with:
          java-version: 11
          server-id: github

      - name: Build Project
        run: ./gradlew clean build --refresh-dependencies -Pversion=$VERSION

      - name: Install gpg secret key
        run: |
          export GPG_TTY=$(tty)
          echo -n "${{ secrets.OSSRH_GPG_SECRET_KEY }}" | base64 --decode | gpg --batch --import
          gpg --list-secret-keys --keyid-format LONG
          echo -n "${{ secrets.OSSRH_GPG_SECRET_KEY }}" | base64 --decode > $GITHUB_WORKSPACE/release.gpg
        if: github.event_name == 'release'

      - name: Publish to Maven Central
        run: |
          ./gradlew publishToSonatype $(if [ "${{github.event.release.prerelease}}" = "true" ]; then echo 'closeSonatypeStagingRepository'; else echo 'closeAndReleaseSonatypeStagingRepository'; fi) \
            -PlibraryVersion=$VERSION-SNAPSHOT \
            -Psigning.keyId=69C08EA0 -Psigning.password="${{ secrets.OSSRH_GPG_SECRET_KEY_PASSWORD }}" -Psigning.secretKeyRingFile=$GITHUB_WORKSPACE/release.gpg \
            --info
        env:
          OSSRH_USERNAME: ${{ secrets.OSSRH_USERNAME }}
          OSSRH_PASSWORD: ${{ secrets.OSSRH_PASSWORD }}

