[versions]
blockApi = "0.1.10"
eventStream = "0.6.3"
exposed = "0.41.1"
h2database = "1.4.200"
kotlinxCore = "1.6.4"
kotlinxCli = "0.3.5"
kotlinxDateTime = "0.4.0"
kotlinReflect = "1.8.10"
kotlinStdLib = "1.8.10"
junitPioneer = "1.9.1"
junit = "5.1.0"
mockk = "1.13.4"
commonsText = "1.10.0"
commonscsv = "1.10.0"
commonsio = "2.11.0"
commonslang = "3.12.0"
scarlet = "0.1.12"
datadog = "2.13.0"
postgres = "42.5.4"
provenanceProtos = "1.14.0"
logback = "1.2.3"
moshi = "1.13.0"
hoplite = "2.7.1"
json = "20210307"
gson = "2.10.1"
grpc = "1.53.0"
grpcCore = "1.53.0"
kotlinSerialization = "1.4.1"
dbUtils = "1.7"
ravendb = "5.4.0"
hdWallet = "0.1.15"
jacksonModule = "2.14.2"
ktor = "1.6.8" # A handful of plugins don't support ktor 2.0 yet due diligence before upgrading.
okhttp = "4.10.0"
kodein = "7.18.0"
swaggerKtor="0.3-beta.3"
apache = "1.10.0"
protobufUtil = "3.22.0"

pluginProtobuf = "0.18.7"
pluginNexusPublishPlugin = "1.2.0"
pluginOpenAPI = "5.4.0"

[libraries]
blockapi-proto = { module = "tech.figure.block:api-proto", version.ref = "blockApi" }
blockapi-client = { module = "tech.figure.block:api-client", version.ref = "blockApi" }
es-model = { module = "io.provenance.eventstream:es-api-model", version.ref = "eventStream" }
es-api = { module = "io.provenance.eventstream:es-api", version.ref = "eventStream" }
es-core = { module = "io.provenance.eventstream:es-core", version.ref = "eventStream" }
es-kakfa = { module = "io.provenance.eventstream:es-kafka", version.ref = "eventStream" }
es-cli = { module = "io.provenance.eventstream:es-cli", version.ref = "eventStream" }

kotlin-cli = { module = "org.jetbrains.kotlinx:kotlinx-cli-jvm", version.ref = "kotlinxCli" }
kotlin-datetime = { module = "org.jetbrains.kotlinx:kotlinx-datetime", version.ref = "kotlinxDateTime" }
kotlin-core = { module = "org.jetbrains.kotlinx:kotlinx-coroutines-core", version.ref = "kotlinxCore" }
kotlin-jdk8coroutines = { module = "org.jetbrains.kotlinx:kotlinx-coroutines-jdk8", version.ref = "kotlinxCore" }
kotlin-guava = { module = "org.jetbrains.kotlinx:kotlinx-coroutines-guava", version.ref = "kotlinxCore" }
kotlin-reactivecoroutines = { module = "org.jetbrains.kotlinx:kotlinx-coroutines-reactive", version.ref = "kotlinxCore" }
kotlin-testcoroutines = { module = "org.jetbrains.kotlinx:kotlinx-coroutines-test", version.ref = "kotlinxCore" }
kotlin-stdlib = { module = "org.jetbrains.kotlin:kotlin-stdlib", version.ref = "kotlinStdLib" }
kotlin-reflect = { module = "org.jetbrains.kotlin:kotlin-reflect", version.ref = "kotlinReflect" }
kotlin-serialization = { module = "org.jetbrains.kotlinx:kotlinx-serialization-json", version.ref = "kotlinSerialization"}
kotlin-test = { module = "org.jetbrains.kotlin:kotlin-test" }

ktor-jackson = { module = "io.ktor:ktor-jackson", version.ref="ktor" }
ktor-gson = { module = "io.ktor:ktor-gson", version.ref="ktor" }
ktor-core = { module = "io.ktor:ktor-server-core", version.ref="ktor" }
ktor-netty = { module = "io.ktor:ktor-server-netty", version.ref="ktor" }
ktor-status = { module = "io.ktor:ktor-server-status-pages-jvm", version.ref="ktor" }
ktor-headers = { module = "io.ktor:ktor-server-default-headers-jvm", version.ref="ktor" }
kodein = { module = "org.kodein.di:kodein-di-jvm", version.ref="kodein"}

ktor-swagger = { module = "com.github.papsign:Ktor-OpenAPI-Generator", version.ref="swaggerKtor"}

junit-jupiter = { module = "org.junit.jupiter:junit-jupiter-engine", version.ref = "junit" }
commons-text = { module = "org.apache.commons:commons-text", version.ref = "commonsText" }
junit-pioneer = { module = "org.junit-pioneer:junit-pioneer", version.ref = "junitPioneer" }
mockk = { module = "io.mockk:mockk", version.ref = "mockk"}

commons-lang = { module = "org.apache.commons:commons-lang3", version.ref = "commonslang" }
commons-io = { module = "commons-io:commons-io", version.ref = "commonsio" }
commons-csv = { module = "org.apache.commons:commons-csv", version.ref = "commonscsv" }
jackson-module = { module = "com.fasterxml.jackson.module:jackson-module-kotlin", version.ref = "jacksonModule" }

scarlet-core = { module = "com.tinder.scarlet:scarlet", version.ref = "scarlet" }
scarlet-stream = { module = "com.tinder.scarlet:stream-adapter-coroutines", version.ref = "scarlet" }
scarlet-websocket = { module = "com.tinder.scarlet:websocket-okhttp", version.ref = "scarlet" }
scarlet-moshi = { module = "com.tinder.scarlet:message-adapter-moshi", version.ref = "scarlet" }

datadog = { module = "com.datadoghq:java-dogstatsd-client", version.ref = "datadog"}

provenance-protos = { module = "io.provenance:proto-kotlin", version.ref = "provenanceProtos" }

logback-core = { module = "ch.qos.logback:logback-core", version.ref = "logback" }
logback-classic = { module = "ch.qos.logback:logback-classic", version.ref = "logback" }

moshi-kotlin-codegen = { module = "com.squareup.moshi:moshi-kotlin-codegen", version.ref = "moshi" }
moshi-core = { module = "com.squareup.moshi:moshi", version.ref = "moshi" }
moshi-kotlin = { module = "com.squareup.moshi:moshi-kotlin", version.ref = "moshi" }

hoplite-core = { module = "com.sksamuel.hoplite:hoplite-core", version.ref = "hoplite" }
hoplite-yaml = { module = "com.sksamuel.hoplite:hoplite-yaml", version.ref = "hoplite" }

json = { module = "org.json:json", version.ref = "json" }
gson = { module = "com.google.code.gson:gson", version.ref = "gson" }
apache-commons = { module = "org.apache.commons:commons-csv", version.ref = "apache" }

grpc-protobuf = { module = "io.grpc:grpc-protobuf", version.ref = "grpc"}
grpc-stub = { module = "io.grpc:grpc-stub", version.ref = "grpc"}
grpc-netty = { module = "io.grpc:grpc-netty-shaded", version.ref = "grpc"}
grpc-core = { module = "io.grpc:grpc-core", version.ref = "grpcCore" }

protobuf-util = { module = "com.google.protobuf:protobuf-java-util", version.ref = "protobufUtil"}

commons-dbutils = { module = "commons-dbutils:commons-dbutils", version.ref = "dbUtils"}

raven-db = { module = "net.ravendb:ravendb", version.ref = "ravendb" }
exposed-core = { module = "org.jetbrains.exposed:exposed-core", version.ref = "exposed" }
exposed-dao = { module = "org.jetbrains.exposed:exposed-dao", version.ref = "exposed" }
exposed-jdbc = {module = "org.jetbrains.exposed:exposed-jdbc", version.ref = "exposed"}

postgres = { module = "org.postgresql:postgresql", version.ref = "postgres" }
h2database = { module = "com.h2database:h2", version.ref = "h2database" }

hdwallet-bech32 = { module = "io.provenance.hdwallet:hdwallet-bech32", version.ref = "hdWallet"}
hdwallet-common = { module = "io.provenance.hdwallet:hdwallet-common", version.ref = "hdWallet"}

okhttp = { module = "com.squareup.okhttp3:okhttp", version.ref = "okhttp" }


[plugins]
kapt = { id = "org.jetbrains.kotlin.kapt" }
publish-nexus = { id = "io.github.gradle-nexus.publish-plugin", version.ref = "pluginNexusPublishPlugin" }
protobuf = { id = "com.google.protobuf", version.ref = "pluginProtobuf" }
openapi-generator = { id = "org.openapi.generator", version.ref = "pluginOpenAPI" }

[bundles]
hdwallet = ["hdwallet-bech32", "hdwallet-common"]
eventstream = ["es-model", "es-api", "es-core", "es-kakfa", "es-cli"]
kotlin = ["kotlin-cli", "kotlin-datetime", "kotlin-core", "kotlin-jdk8coroutines", "kotlin-reactivecoroutines", "kotlin-stdlib", "kotlin-reflect"]
junit = ["junit-pioneer", "junit-jupiter", "commons-text"]
mockk = ["mockk"]
apache-commons = ["commons-lang", "commons-io", "commons-csv"]
scarlet = ["scarlet-core", "scarlet-stream", "scarlet-websocket", "scarlet-moshi"]
logback = ["logback-core", "logback-classic"]
hoplite = ["hoplite-core", "hoplite-yaml"]
blockapi = ["blockapi-proto", "blockapi-client"]
exposed = ["exposed-core", "exposed-dao", "exposed-jdbc"]
